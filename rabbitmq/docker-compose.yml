version: "3.9"

# Describes containers (services) that make up the environment.
services: 

  rabbitmq:
    # Official RabbitMQ image from Docker Hub including management UI.
    image: rabbitmq:3.8.14-management
    # Override service name being used as container name
    container_name: rabbit-node-1
    # Override default hostname (container ID)
    hostname: rabbit-node-1
    # Publish ports to the outside world - bindng container port to host port (hostport:containerport).
    ports:
      # Standard AMQP protocol port
      - 5672:5672
      # RabbitMQ management port
      - 15672:15672
    # Which custom Docker networks service should join.
    networks: 
      - rabbit-network
  
  producer:
    build: 
      # Use root directory as build context to allow for copying of files from shared folders
      context: ../
      # Relative path to a Dockerfile to build an image from.
      dockerfile: ./rabbitmq/producer-service/Dockerfile
    container_name: rabbit-producer-service
    # It takes some time for RabbitMQ to start up and get ready for incoming TCP-connections.
    # This will make the producer and consumer services crash as the connection is refused.
    # Indefinitely restarting the containers when they stop is a temporary fix.
    # A better fix should be made in another issue by using Docker healthcheck for example.
    restart: unless-stopped
    depends_on: 
      - rabbitmq
    networks: 
      - rabbit-network
  
  consumer:
    build: 
      context: ../
      dockerfile: ./rabbitmq/consumer-service/Dockerfile
    container_name: rabbit-consumer-service
    restart: unless-stopped
    depends_on: 
      - rabbitmq
    networks: 
      - rabbit-network

# Docker Compose automatically creates a default network that all services joins, so they communicate with each other.
# This section describes custom Docker networks that individual services can join.
networks:
  rabbit-network:
    driver: bridge