version: "3.9"

services:
  zookeeper:
    # Official Zookeeper image from Docker Hub.
    image: zookeeper:3.6.2
    container_name: zookeeper-node-1
    hostname: zookeeper-node-1
    ports: 
      # Standard Zookeeper port which the clients connect to.
      - 2181:2181
    environment: 
      ZOO_MY_ID: 1
    networks: 
      - kafka-network

  kafka:
    # Popular Docker image for Apache Kafka that downloads Kafka from Apache's official Kafka website.
    # Kafka version specified by tag in format: <scala version>-<kafka version>
    image: wurstmeister/kafka:2.13-2.7.0
    container_name: kafka-broker-1
    hostname: kafka-broker-1
    depends_on:
      # Kafka depends on Zookeeper. This makes sure that the Zookeeper container starts before the Kafka container
      - zookeeper
    ports:
      # Bind container port to host port (hostport:containerport).
      - 19092:19092
    environment: 
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      # How kafka nodes communicate.
      KAFKA_LISTENERS: INTERNAL://kafka-broker-1:9092,EXTERNAL://kafka-broker-1:19092
      # How clients connect. 
      # INTERNAL listener for traffic from the internal Docker network.
      # EXTERNAL listener for traffic coming from outside Docker network, but still only from Docker-host machine.
      # EXTERNAL listener used during testing to be able to use Kafka VScode extension to test the Kafka cluster.
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-broker-1:9092,EXTERNAL://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      # Create topic with 10 partitions and replication factor 1 if it does not already exists (special for the wurstmeister Kafka image)
      # Could use the kafkajs admin client instead
      KAFKA_CREATE_TOPICS: air-quality-observation-topic:10:1
    networks: 
      - kafka-network

  producer:
    build:
      # Use root directory as build context to allow for copying of files from shared folders
      context: ../
      # Relative path to a Dockerfile to build an image from.
      dockerfile: ./kafka/producer-service/Dockerfile
    container_name: kafka-producer-service
    depends_on: 
      - zookeeper
      - kafka
    networks: 
      - kafka-network
  
  consumer:
    build:
      context: ../
      dockerfile: ./kafka/consumer-service/Dockerfile
    container_name: kafka-consumer-service
    depends_on: 
      - zookeeper
      - kafka
    networks: 
      - kafka-network

networks: 
  kafka-network:
    driver: bridge
